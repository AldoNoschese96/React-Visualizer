{"version":3,"sources":["components/Navbar/Nav.jsx","App.js","index.js"],"names":["Nav","generate","selectSorting","speed","setState","state","selectSortingType","text","className","onClick","style","marginLeft","type","value","onChange","e","target","currentTarget","textContent","App","useState","randomArr","i","j","useEffect","generateArray","arrayRandom","generateRandomArray","wait","console","log","Promise","resolve","setTimeout","parseInt","bubbleSorting","arr","a","array","len","length","temp","sort","selectionSorting","min","max","tmp","c","counter","random","Math","floor","includes","push","selectedSorting","map","x","minHeight","backgroundColor","background","width","margin","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f028968c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Nav = ({ generate, selectSorting, speed, setState, state }) => {\n  const selectSortingType = (text) => {\n    selectSorting(text);\n  };\n\n  return (\n    <nav>\n      <div className=\"navContainer\">\n        <div className=\"divCta\">\n          <button onClick={generate}>Random Array</button>\n          <div className=\"div_speed\">\n            <span style={{ marginLeft: \"5rem\" }}>Speed ms</span>\n            <input\n              type=\"number\"\n              value={speed}\n              onChange={(e) => setState({ ...state, speed: e.target.value })}\n              style={{ marginLeft: \"1rem\" }}\n            />\n          </div>\n        </div>\n        <div className=\"listContainer\">\n          <ul>\n            <li>\n              <button\n                onClick={(e) => selectSortingType(e.currentTarget.textContent)}\n              >\n                Bubble Sort\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={(e) => selectSortingType(e.currentTarget.textContent)}\n              >\n                Selection Sort\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\n\n//Style\nimport \"./App.css\";\n\n//Components\nimport Nav from \"./components/Navbar/Nav\";\n\nfunction App() {\n  const [state, setState] = useState({\n    randomArr: [],\n    speed: 1,\n    i: 0,\n    j: 0,\n  });\n\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const generateArray = () => {\n    const arrayRandom = generateRandomArray();\n    setState({ ...state, randomArr: arrayRandom });\n  };\n\n  const selectSortingHandler = (type) => {\n    switch (type) {\n      case \"Bubble Sort\":\n        setState({\n          ...state,\n          selectedSorting: bubbleSorting(state.randomArr),\n        });\n        break;\n      case \"Selection Sort\":\n        console.log(type);\n        setState({\n          ...state,\n          selectedSorting: selectionSorting(state.randomArr),\n        });\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const wait = () => {\n    console.log(state.speed);\n    return new Promise((resolve) => setTimeout(resolve, parseInt(state.speed)));\n  };\n\n  const bubbleSorting = (arr) => {\n    const sort = async () => {\n      let array = [...arr];\n      let len = array.length;\n\n      for (let i = 0; i < len; i++) {\n        for (let j = 0; j < len - i - 1; j++) {\n          if (array[j] > array[j + 1]) {\n            await wait();\n            const temp = array[j];\n            array[j] = array[j + 1];\n            array[j + 1] = temp;\n            setState({\n              ...state,\n              randomArr: array,\n              i: array[i],\n              j: array[j],\n            });\n          }\n        }\n      }\n    };\n    sort();\n  };\n\n  const selectionSorting = async (arr) => {\n    let len = arr.length;\n\n    for (let i = 0; i < len; i++) {\n      let min = i;\n\n      for (let j = i + 1; j < len; j++) {\n        var max = arr[j];\n        if (arr[min] > arr[j]) {\n          min = j;\n        }\n      }\n      setState({\n        ...state,\n        randomArr: [...arr],\n        i: arr[min],\n        j: max,\n      });\n      if (min !== i) {\n        let tmp = arr[i];\n        arr[i] = arr[min];\n        arr[min] = tmp;\n      }\n      await wait();\n    }\n    return arr;\n  };\n\n  const generateRandomArray = (min = 0, max = 60, c = 0, arr = []) => {\n    let counter = c;\n    const array = arr;\n    if (c >= max) {\n      return array;\n    }\n    const random = Math.floor(Math.random() * (max - min) + min);\n\n    if (!array.includes(random)) {\n      array.push(random);\n      counter++;\n    }\n    return generateRandomArray(min, max, counter, array);\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav\n        generate={generateArray}\n        selectSorting={selectSortingHandler}\n        speed={state.speed}\n        setState={setState}\n        state={state}\n      />\n      <div className=\"visualizerContainer\">\n        {state.randomArr.map((x) => {\n          console.log(state.i, state.j);\n          return (\n            <div\n              key={x}\n              className=\"bar\"\n              style={{\n                minHeight: `${x * 5}px`,\n                backgroundColor: x === state.i ? \"#39ff14\" : \"#51c4d3\",\n                background: x === state.j ? \"#ff073a\" : \"#51c4d3\",\n                width: \"20px\",\n                margin: \"0rem 0.1rem\",\n                color: \"#FFFFFF\",\n              }}\n            >\n              <b>{x}</b>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}